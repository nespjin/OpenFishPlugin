{
    /**
        字段后缀
        对于字段url的后缀可为
        url-{设备类型}

        设备类型：
           0: 手机
           1: 平板
           2: 桌面

       例如： 如果同时存在 url与url-2，则在桌面端使用url-2，其它端使用url
    **/
    "parent": { 
        /**
        被继承的插件（又称父插件，当前插件相对于父插件为子插件）

        如果父插件与子插件具有相同的字段，则使用子插件的字段

        继承方式（用户输入）：
        对象：{} // 若解析失败，则编译失败
        路径引用: "C:/xx/xx/xx/SamplePlugin.json"、"../xx/xx/SamplePlugin.json" // 若不存在，则编译失败
        网络引用: "https://xxx/xxx/SamplePlugin.json" // 若访问失败，则编译失败
        
        */

    },
    "name": "", // 插件名称
    "version": "1.0.0+1", // 版本：版本名+版本号
    "runtime": "1-3", // 支持的运行时，双闭区间 格式：支持的最低版本-支持的最高版本
    "time": "2021-11-30 22:00:11,2022-01-01 08:00:11", // 创建时间,更新时间，不允许用户输入
    "tags": [], // String[], 标签
    
    /**
    支持的设备种类（手机、平板、电脑） 8bit
    
    bit7 bit6 bit5 bit4 bit3 bit2 bit1 bit0
     0    0    0    0    0    0    0    0

     bit0: 是否支持手机 0 不支持 1 支持
     bit1: 是否支持平板 0 不支持 1 支持
     bit2: 是否支持电脑 0 不支持 1 支持

    例如：值 00000001 仅支持手机，值 00000011 支持手机和平板
    */
    "deviceFlag": "00000000",   
    "type": 0, // 0:影视
    "introduction": "", // 介绍
    "ref": {
        // 引用。可自定义 字段、对象、js代码
        // 1.在引用内不能使用引用
        // 2.只能定义一级引用
        "commonUrl":"post:http://xxx.xx/a?id=1", // 字段引用 url 格式，请求类型:地址?统一参数表
        "searchUrl":"http://xxxx.xxx/index.php?m=vod-search&wd={{st}}", // {{st}} 会替换为用户输入的关键字
        "detailPageUrl":"",
        "commonJs":"function a() { }", // js 代码引用
        "commonJs-2":"../Sample.js", // 本地引用
        "sampleJs":"https://xxx.xx/sample.js", // 网络引用
        "moviesDsl": {
          // 对象引用，DSL 支持
          // 格式：类型:值
          // 类型可不写
          "field0": "class.main/tag.div.2/tag.img@href", // 默认dsl
          "field1": "dsl:class.main/tag.div.2/tag.img@href", // dsl
          "field2": "selector:#content_views > p:nth-child(2)@href", // selector
          "field3": "xpath://*[@id="content_views"]/p[2]/text()[1]", // XPath
          "field4": "xpath:/html/body/div[3]/div[1]/main/div[1]/article/div/div[1]/div/div/p[2]/text()[1]", // fullXPath
          "field5": "regex:/^(?:Chapter|Section) [1-9][0-9]{0,1}$/", // 正则表达式

          // 高级用法
          // 1.使用DSL函数
          "field6":"(dsl:class.main/tag.div.2/tag.img).trim()",
          // 2.使用DSL变量
          "field7":"
          let a = dsl:class.main/tag.div.2/tag.img;
          a.trim();
          "
        }
    },
    "pages": [ // 页面集, id不可重复
        { 
            "id": "main", // 不支持字段后缀
            "url": "{{commonUrl}}", // 引用字段 ref.commonUrl
            "url-2":"", // 在桌面端会使用该字段
            // 若js与dsl同时存在，则使用dsl
            "js": "{{commonJs}}", // 引用Js，在桌面端会使用ref.commonJs-2
            "dsl": {}
        },
        {
            "id": "movies",
            "url": "{{commonUrl}}", // 引用字段
            "js": "{{commonJs}}", // 引用Js，在桌面端会使用ref.commonJs-2
            "dsl": "{{moviesDsl}}" // 引用对象 ref.moviesDsl
        },
        {
            "id":"detail",
            "refUrl":"{{detailPageUrl}}", // 在线引用链接 ref.detailPageUrl
        }
    ],
    "extensions": {} // 扩展 Object
}

/**
DSL函数:

split(a,',')
分割字符串

contact(a,b)
合并多个字符串

trim()
去掉首尾空白

trimStart()
去掉首部空白

trimEnd()
去掉尾部空白

公共js函数:
 
// 返回:
// 设备类型：
//   0: 手机
//   1: 平板
/    2: 桌面
getDeviceType() 

// 向应用端发送数据
// 
// 参数:
// 
// type: 数据类型，int
// 
// data：数据Object
sendData(type,data)

// 向应用端发送错误消息
// 
// 参数:
// 
// errorMessage: 错误消息字符串，string
sendError(errorMessageString)

// 尝试执行method，catch到异常后自动调用sendError发送错误信息到应用端。
tryRun(function method(){})

小丑鱼影视js函数：

// 创建一个HomePage对象
createHomePage()

// 创建一个CategoryPage对象
createCategoryPage()

// 创建一个SearchPage对象
createSearchPage()

// 创建一个detailPage对象
createDetailPage()

// 向应用端发送主页面数据
// 
// 参数:
// 
// homePage：主页面Object
sendHomePage(homePage)

// 向应用端发送视频分类页面数据
// 
// 参数:
// 
// categoryPage：视频分类页面Object
sendCategoryPage(categoryPage)

// 向应用端发送搜索页面数据
// 
// 参数:
// 
// searchPage：搜索页面Object
sendSearchPage(searchPage)

// 向应用端发送视频详情数据
// 
// 参数:
// 
// detailPage：视频详情页面Object
sendDetailPage(detailPage)

**/